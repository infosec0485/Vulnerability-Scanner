#!/bin/sh

lang_check=`locale -a 2>/dev/null | grep "en_US" | egrep -i "(utf8|utf-8)"`

if [ "$lang_check" = "" ]; then
		lang_check="C"
	
fi

LANG="$lang_check"
LC_ALL="$lang_check"
LANGUAGE="$lang_check"
export LANG
export LC ALL
export LANGUAGE

if [ "`command -v netstat 2>/dev/nul`" != "" ] || [ "`which netstat 2>/dev/null`" != "" ]; then
		port_cmd="netstat"

else
		port_cmd="ss"
fi

if [ "`command -v systemctl 2>/dev/null`" != "" ] || [ "`which systemctl 2>/dev/null`" != "" ]; then
		systemctl_cmd="systemctl"
fi

RESULT_FILE="result_collect_`date +\"%Y%m%d%H%M\"`.txt"

#2/8
echo "[Start Script]"
echo "======================== Linux Secruity Check Script Start ======================" > $RESULT_FILE 2>&1
######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-01 root 계정 원격접속 제한
######################################################################################################
echo "[ U-01 ] : Check"
echo "=================[ U-01 root 계정 원격접속 제한 START]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "1. SSH" >> $RESULT_FILE 2>&1
echo "1-1. SSH Process Check" >> $RESULT_FILE 2>&1
get_ssh_ps=`ps -ef | grep -v "grep" | grep "sshd"`
if [ "$get_ssh_ps" != "" ]; then
		echo "$get_ssh_ps" >> $RESULT_FILE 2>&1
else
		echo "Not Found Process" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1

echo "1-2. SSH Service Check" >> RESULT_FILE 2>&1
if [ "$systemctl_cmd" != "" ]; then
		get_ssh_service=`$systemctl_cmd list-units --type service | egrep '(ssh|sshd)\.service' | sed -e 's/^*//g' -e 's/^	*//g' | tr -s " \t"`
	if [ "$get_ssh_service" != "" ]; then
		echo "$get_ssh_service" >> $RESULT_FILE 2>&1
	else
		echo "Not Found Service" >> $RESULT_FILE 2>&1
	fi
else
	echo "Not Found systemctl Command" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1

echo "1-3. SSH Port Check" >> $RESULT_FILE 2>&1
if [ "$port_cmd" != "" ]; then
	get_ssh_port=`$port_cmd -na | grep "tcp" | grep "LISTEN" | grep ':22[ \t]'`
	if [ "$get_ssh_port" != "" ]; then
		echo "$get_ssh_port" >> $RESULT_FILE 2>&1
	else
		echo "Not Found Port" >> $RESULT_FILE 2>&1
	fi
else
	echo "Not Found Port Command" >> $RESULT_FILE 2>&1
fi

#4/8
if [ "$get_ssh_ps" != "" ] || [ "$get_ssh_service" != "" ] || [ "$get_ssh_port" != "" ]; then
	echo "" >> $RESULT_FILE 2>&1
	echo "1-4. SSH Configuration File Check" >> $RESULT_FILE 2>&1
	if [ -f "etc/ssh/sshd_config" ]; then
		get_ssh_conf=`cat /etc/ssh/sshd_config | egrep -v '^#|^$' | grep "PermitRootLogin"`
		if [ "$get_ssh_conf" != "" ];then
			echo "/etc/ssh/sshd_config : $get_ssh_conf" >> $RESULT_FILE 2>&1
			get_conf_check=`echo "$get_ssh_conf" | awk '{ print $2 }'`
			if [ "$get_conf_check" = "no" ]; then
				ssh_flag=1
			else
				ssh_flag=0
			fi
		else
			ssh_flag=1
			echo "/etc/ssh/sshd_config : Not Found PermitRootLogin Configuration" >> $RESULT_FILE 2>&1
		fi
	else
		ssh_flag=2
		echo "Not Found SSH Configuration File" >> $RESULT_FILE 2>&1
	fi
	echo "" >> $RESULT_FILE 2>&1
else
	ssh_flag=1
fi
#5/8
echo "2. Telnet" >> $RESULT_FILE 2>&1
echo "2.1 Telnet Process Check" >> $RESULT_FILE 2>&1
get_telnet_ps=`ps -ef | grep -v "grep" | grep "telnet"`
if [ "$get_telnet_ps" != "" ]; then
	echo "$get_telnet_ps" >> $RESULT_FILE 2>&1
else
	echo "Not Found Process" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1

echo "2-2. Telnet Service Check" >> $RESULT_FILE 2>&1
if [ "$systemctl_cmd" != "" ]; then
	get_telnet_service=`$systemctl_cmd list-units --type service | egrep '(telnet|telnetd)\.service' | sed -e 's/^ *//g' -e 's/^	*//g' | tr -s " \t"`
	if [ "$get_telnet_service" != "" ]; then
		echo "$get_telnet_service" >> $RESULT_FILE 2>&1
	else
		echo "Not Found Service" >> $RESULT_FILE 2>&1
	fi
else
	echo "Not Found systemctl Command" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1

#6/8
echo "2-3. Telnet Port Check" >> $RESULT_FILE 2>&1
if [ "$port_cmd" != "" ]; then
	get_telnet_port=`$port_cmd -na | grep "tcp" | grep "LISTEN" | grep ':23[ \t]'`
	if [ "$get_telnet_port" != "" ]; then
		echo "$get_telnet_port" >> $RESULT_FILE 2>&1
	else
		echo "Not Found Port" >> $RESULT_FILE 2>&1
	fi
else
	echo "Not Found Port Command" >> $RESULT_FILE 2>&1
fi

if [ "$get_telnet_ps" != "" ] || [ "$get_telnet_service" != "" ] || [ "$get_telnet_port" != "" ]; then
	telnet_flag=0
	echo "" >> $RESULT_FILE 2>&1
	echo "2.4 Telnet Configuration Check" >> $RESULT_FILE 2>&1
	if [ -f "/etc/pam.d/remote" ]; then
		pam_file="/etc/pam.d/remote"
	else
		pam_file="/etc/pam.d/login"
	fi
	#7/8
	if [ "$pam_file" != "" ]; then
		echo "- $pam_file">> $RESULT_FILE 2>&1
		get_conf=`cat $pam_file | egrep -v '^#|^$' | grep "pam_securetty.so"`
		if [ "$get_conf" != "" ]; then
			echo "get_conf" >> $RESULT_FILE 2>&1
			if [ -f "/etc/securetty" ]; then
				echo "- /etc/securetty" >> $RESULT_FILE 2>&1
				echo "`cat /etc/securetty`" >> $RESULT_FILE 2>&1
				get_pts=`cat /etc/securetty | egrep -v '^#|^$' | grep "^[ \t]*pts"`
				if [ "$get_pts" = "" ]; then
					telnet_flag=1
				fi
			else
				echo "Not Found Telnet tty Configuration File" >> $RESULT_FILE 2>&1
			fi
		else
			echo "$pam_file : Not Found pam_securetty.so Configuration" >> $RESULT_FILE 2>&1
		fi
	else
		telnet_flag=2
		echo "Not Found Telnet Pam Configuration File" >> $RESULT_FILE 2>&1
	fi
else
	telnet_flag=1
fi
#8/8

#취약 : 0, 양호 : 1, 검토 : 2
if [ $ssh_flag -eq 1 ] && [ $telnet_flag -eq 1 ]; then
    echo "결과값 : 양호" >> $RESULT_FILE 2>&1
elif [ $ssh_flag -eq 0 ] || [ $telnet_flag -eq 0 ]; then
    echo "결과값 : 취약" >> $RESULT_FILE 2>&1
elif [ $ssh_flag -eq 2 ] || [ $telnet_flag -eq 2]; then
	echo "결과값 : 검토" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo " =============================[U-01 root 계정 원격접속 제한 END]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1
######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-02 비밀번호 복잡성 설정
######################################################################################################

echo "[ U-02 ] : Check"
echo "[ U-02 비밀번호 복잡성 설정 START]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "▶ /etc/login.defs 파일" >> $RESULT_FILE 2>&1
echo "`cat  /etc/login.defs | grep "PASS_WARN_AGE" | grep -v "#"`" >> $RESULT_FILE 2>&1
echo "`cat  /etc/login.defs | grep "PASS_MAX_DAYS" | grep -v "#"`" >> $RESULT_FILE 2>&1
echo "`cat  /etc/login.defs | grep "PASS_MIN_DAYS" | grep -v "#"`" >> $RESULT_FILE 2>&1

echo "" >> $RESULT_FILE 2>&1

echo "▶ /etc/security/pwquality.conf 파일" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "difok"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "minlen"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "dcredit"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "ucredit"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "lcredit"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "ocredit"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "minclass"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "maxrepeat"`" >> $RESULT_FILE 2>&1
echo "`cat /etc/security/pwquality.conf | grep "maxclassrepeat"`" >> $RESULT_FILE 2>&1

echo "▶ /etc/pam.d/system-auth 파일" >> $RESULT_FILE 2>&1

if [ -f "etc/pam.d/system-auth" ]; then
	echo "/etc/pam.d/system-auth 파일존재" >> $RESULT_FILE 2>&1
else
	echo "/etc/pam.d/system-auth 파일없음" >> $RESULT_FILE 2>&1
fi
echo "▶ /etc/pam.d/password-auth 파일" >> $RESULT_FILE 2>&1

if [ -f "etc/pam.d/password-auth" ]; then
        echo "/etc/pam.d/password-auth 파일존재" >> $RESULT_FILE 2>&1
else
        echo "/etc/pam.d/password-auth 파일없음" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1
echo "U-02 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1
######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-03 계정 임계값 설정
######################################################################################################

echo "[ U-03 ] : Check"
echo "[ U-03 telnet 임계값 설정]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "[/etc/login.defs 파일]" >> $RESULT_FILE 2>&1
echo "ㅇ /etc/login.defs 파일 내 설정" >> $RESULT_FILE 2>&1

if [ `cat /etc/login.defs | grep "LOGIN_RETRIES" | grep -v "#" | awk '{print $2}'` -lt 11 ]; then
	echo "`cat  /etc/login.defs | grep "LOGIN_RETRIES" | grep -v "#"`" >> $RESULT_FILE 2>&1
else
	echo "계정 임계값 설정 취약" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1
echo "▶ /etc/pam.d/system-auth 파일" >> $RESULT_FILE 2>&1
if [ -f "etc/pam.d/system-auth" ]; then
        echo "/etc/pam.d/system-auth 파일존재" >> $RESULT_FILE 2>&1
else
        echo "/etc/pam.d/system-auth 파일없음" >> $RESULT_FILE 2>&1
fi
echo "▶ /etc/pam.d/password-auth 파일" >> $RESULT_FILE 2>&1

if [ -f "etc/pam.d/password-auth" ]; then
        echo "/etc/pam.d/password-auth 파일존재" >> $RESULT_FILE 2>&1
else
        echo "/etc/pam.d/password-auth 파일없음" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-03 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-04 패스워드 파일 보호 
######################################################################################################

echo "[ U-04 ] : Check"
echo "[ U-04 패스워드 파일 보호]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "▶ 패스워드 암호화 사용여부 확인" >> $RESULT_FILE 2>&1

if [ `ls /etc | grep -x "shadow" |wc -l ` -eq 1 ]; then
	echo "ㅇ 쉐도우 파일 있음" >> $RESULT_FILE 2>&1
else
	echo "ㅇ 쉐도우 파일 없음" >> $RESULT_FILE 2>&1
fi
if [ `cat /etc/passwd | cut -d ":" -f 2 | grep -v "x" | wc -l` -eq 0 ]; then
		echo "[양호]쉐도우 패스워드 사용 중 " >> $RESULT_FILE 2>&1
else 
		echo "[취약]쉐도우 패스워드 미사용 중" >> $RESULT_FILE 2>&1
fi
echo "▷ /etc/passwd 파일 " >> $RESULT_FILE 2>&1
echo "`cat /etc/passwd | grep "root"`" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1
echo "U-04 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1



######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-05 root홈, 패스 디렉터리 권한 및 패스 설정
######################################################################################################
echo "[ U-05 ] : Check"
echo "[ U-05 root홈, 패스 디렉터리 권한 및 패스 설정" >> $RESULT_FILE 2>&1

path_test=$(echo $PATH | egrep "^\.:|::|:.:")

if [ -z $path_test ]; then
	echo "[양호]PATH에서 . 이 없습니다." >> $RESULT_FILE 2>&1
else
	echo "[취약]PATH에서 . 이 있습니다." >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1
echo "U-05 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-19 Finger 서비스 비활성화
######################################################################################################
echo "[ U-19 ] : Check"
echo "[ U-19 Finger 서비스 비활성화]" >> $RESULT_FILE 2>&1

xin_check=`ps -ef | grep finger | grep -v grep`

if [ -z $xin_check ]; then
	echo "finger 서비스 미구동중" >> $RESULT_FILE 2>&1
else
	echo "finger 서비스 구동 확인 " >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1

if [ -f /etc/xinetd.d/finger ]; then
	echo "/etc/xinetd.d 존재" >> $RESULT_FILE 2>&1
	if [ `cat /etc/xinetd.d/finger | grep disable | awk '{print $3}'` = yes ]; then
		echo "서비스 비활성화" >> $RESULT_FILE 2>&1
	else
		echo "[취약]서비스 활성화" >> $RESULT_FILE 2>&1
	fi
else
	echo "[양호]/etc/xinetd.d 존재하지않음" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-19 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1

######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-20 Anonymous FTP 비활성화
######################################################################################################
echo "[ U-20 ] : Check"
echo "[ U-20 Anonymous FTP 비활성화]" >> $RESULT_FILE 2>&1

ps_ftp_check=`ps -ef | grep -v "grep" | grep "ftp" | wc -l`


if [ $ps_ftp_check = 0 ]; then
	echo "ftp 서비스 구동 미구동중" >> $RESULT_FILE 2>&1
else
	echo "ftp 서비스 서비스 중" >> $RESULT_FILE 2>&1
	echo "" >> $RESULT_FILE 2>&1
	echo "`ps -ef | grep -v "grep" | grep "vsftp"`" >> $RESULT_FILE 2>&1
	
	if [ -f "/etc/vsftpd.conf" ]; then
		echo "vsftpd anonymouse_enable 확인" >> $RESULT_FILE 2>&1
		echo "`cat /etc/vsftpd.conf | grep "anonymous_enable"`" >> $RESULT_FILE 2>&1

	else
		echo " /etc/vsftpd.conf 가 없습니다." >> $RESULT_FILE 2>&1
	fi
	if [ -f "/etc/proftpd/proftpd.conf" ]; then
                echo "proftpd 확인" >> $RESULT_FILE 2>&1

        else
                echo " /etc/proftpd.conf 가 없습니다." >> $RESULT_FILE 2>&1
        fi

	echo "" >> $RESULT_FILE 2>&1



fi

ftp_check=`cat /etc/passwd | grep "ftp" | wc -l`
if [ $ftp_check = 0 ]; then
	echo "ftp 계정 존재 없음" >> $RESULT_FILE 2>&1
else
	echo "ftp 계정 존재 삭제 요망" >> $RESULT_FILE 2>&1
	
	if [ -z `cat /etc/passwd | grep -i ^anonymous` ]; then
		echo "anonymous 계정 존재 하지않음 " >> $RESULT_FILE 2>&1
	else
		echo "[취약]anonymous 계정 존재 삭제요망 " >> $RESULT_FILE 2>&1
	fi
fi
echo "" >> $RESULT_FILE 2>&1
echo "U-20 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-21 r 계열 서비스 비활성화
######################################################################################################
echo "[ U-21 ] : Check"
echo "[ U-21 r 계열 서비스 비활성화]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "`cat /etc/services | egrep '^echo|^discard|^daytime|^chargen'`" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

if [ -z `ls -alL /etc/xinetd.d/* | egrep "rsh|rlogin|rexec" | egrep -v "grep|klogin|kshell|kexec"` ]; then
	echo "r 계열 서비스 미구동 중" >> $RESULT_FILE 2>&1
else 
	echo "r 계열 서비스 구동 확인" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1

if [ `netstat -nao | grep '^512' | wc -l` = 0 ]; then
	echo "exec(512) 서비스 미구동" >> $RESULT_FILE 2>&1
else
	echo "exec(512) 서비스 구동중" >> $RESULT_FILE 2>&1
fi
if [ `netstat -nao | grep '^513' | wc -l` = 0 ]; then
        echo "login(513) 서비스 미구동" >> $RESULT_FILE 2>&1
else
        echo "login(513) 서비스 구동중" >> $RESULT_FILE 2>&1
fi
if [ `netstat -nao | grep '^514' | wc -l` = 0 ]; then
        echo "shell(514) 서비스 미구동" >> $RESULT_FILE 2>&1
else
        echo "shell(514) 서비스 구동중" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-21 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1



######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-22 crond 파일 소유자 및 권한 설정
######################################################################################################
echo "[ U-22 ] : Check"
echo "[ U-22 crond 파일 소유자 및 권한 설정]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

crontab_flag=0
cron_flag=0

if [ `ls -al /usr/bin/crontab | awk '{ print $3 }'` = "root" ]; then
        echo "소유자 root 확인" >> $RESULT_FILE 2>&1
        if [ `find /usr/bin/crontab -type f -perm -1 | wc -l` = 0 ]; then
                if [ `find /usr/bin/crontab -type f -perm -750 | wc -l` = 1 ]; then
                        if [ `find /usr/bin/crontab -type f -perm 750 | wc -l` = 1  ]; then
                                echo "[양호]/usr/bin/crontab 파일 권한이 750 이하입니다." >> $RESULT_FILE 2>&1
                                crontab_flag=1
                        else
                                echo "root 소유지만, 실행권한이 750을 초과합니다." >> $RESULT_FILE 2>&1
                        fi
                else
                        echo "[양호]/usr/bin/crontab 파일 권한이 750 이하입니다." >> $RESULT_FILE 2>&1
                        crontab_flag=1
                fi
        else
                echo "[취약]일반 유저에게 실행권한이 있습니다." >> $RESULT_FILE 2>&1
        fi

else
        echo "[취약]소유자가 root가 아닙니다." >> $RESULT_FILE 2>&1
fi

if [ `find /etc/cron.* -type d -perm -1 | wc -l` = "0" ]; then
        if [ `find /etc/cron.* -type d -perm -640 | wc -l` != 0 ]; then
                if [ `find /etc/cron.* -type d -perm 640 | wc -l` != 0 ]; then
                        echo "[양호]/etc/cron.* 권한이 640 이하입니다." >> $RESULT_FILE 2>&1
                        cron_flag=1
                else
                        echo "/etc/cron.* 권한이 640 초과합니다." >> $RESULT_FILE 2>&1
                        echo "`ls -ald /etc/cron.*`" >> $RESULT_FILE 2>&1
                fi
        else
                echo "[양호]/etc/cron.* 권한이 640 이하입니다." >> $RESULT_FILE 2>&1
                cron_flag=1
        fi
else
        echo "/etc/cron.*에 사용자 실행 권한이 있습니다." >> $RESULT_FILE 2>&1
        echo "`ls -ald /etc/cron.*`" >> $RESULT_FILE 2>&1
fi
if [ $cron_flag = 1 ];then
       if [ $crontab_flag = 1 ]; then
               echo "[양호]crontab 명령어 일반사용자 금지 및 cron 관련 파일이 640 이하입니다." >> $RESULT_FILE 2>&1
       else
               echo "[취약]/usr/bin/crontab 권한에 문제가있습니다." >> $RESULT_FILE 2>&1

       fi
else
        echo "[취약]/etc/cron.* 권한에 문제가 있습니다." >> $RESULT_FILE 2>&1
fi



echo "" >> $RESULT_FILE 2>&1
echo "U-22 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1

######################################################################################################
# - 주요정보 통신 기반 시설 | 계정 관리 | U-23 DoS 공격에 취약한 서비스 비활성화
######################################################################################################
echo "[ U-23 ] : Check"
echo "[ U-23 DoS 공격에 취약한 서비스 비활성화]" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

echo "포트 확인" >> $RESULT_FILE 2>&1
echo "`cat /etc/services | egrep '^echo|^discard|^daytime|^chargen'`" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1
echo "(disable = yes [양호], no[취약])" >> $RESULT_FILE 2>&1
echo "========================" >> $RESULT_FILE 2>&1
echo "`cat /etc/xinetd.d/* | grep disable`" >> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1


############# echo ###############
if [ `cat /etc/xinetd.d/echo | grep "disable" | awk '{ print $3 }' | wc -l` -ge 2 ]; then
	echo "[ Disable - echo 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
	echo "[취약] echo Disable = yes 가 아님." >> $RESULT_FILE 2>&1
fi

if [ -z `ps -ef | grep -v "grep" | grep "echo"` ]; then
	echo "echo Process 미 구동중" >> $RESULT_FILE 2>&1
else
	echo "echo Process 구동중" >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1
############# discard #############
if [ `cat /etc/xinetd.d/discard | grep "disable" | awk '{ print $3 }' | wc -l` -ge 2 ]; then
        echo "[ Disable - discard 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[취약] discard Disable = yes 가 아님." >> $RESULT_FILE 2>&1
fi

if [ -z `ps -ef | grep -v "grep" | grep "discard"` ]; then
        echo "discard Process 미 구동중" >> $RESULT_FILE 2>&1
else
        echo "discard Process 구동중" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
############# daytime #############
if [ `cat /etc/xinetd.d/daytime | grep "disable" | awk '{ print $3 }' | wc -l` -ge 2 ]; then
        echo "[ Disable - daytime 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[취약] daytime Disable = yes 가 아님." >> $RESULT_FILE 2>&1
fi

if [ -z `ps -ef | grep -v "grep" | grep "daytime"` ]; then
        echo "daytime Process 미 구동중" >> $RESULT_FILE 2>&1
else
        echo "daytime Process 구동중" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
############# chargen #############
if [ `cat /etc/xinetd.d/chargen | grep "disable" | awk '{ print $3 }' | wc -l` -ge 2 ]; then
        echo "[ Disable - chargen 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[취약] chargen Disable = yes 가 아님." >> $RESULT_FILE 2>&1
fi

if [ -z `ps -ef | grep -v "grep" | grep "chargen"` ]; then
        echo "chargen Process 미 구동중" >> $RESULT_FILE 2>&1
else
        echo "chargen Process 구동중" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-23 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1



######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-24 NFS 서비스 비활성화 
######################################################################################################
echo "[ U-24 ] : Check"
echo "[ U-24 NFS 서비스 비활성화]">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

nfs_port=`ps -ef | egrep "nfs|statd|lockd" | grep -v "grep" | awk '{ print $2 }'`

if [ `netstat -na | grep ":$nfs_port " | grep LISTEN | wc -l` = 0 ]; then
	echo "[ Disable - nfsd 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
	echo "[ $nfs_port 번 포트 상태: LISTENING 상태 아님 ]" >> $RESULT_FILE 2>&1
else
	echo "[ Disable - nfsd 서비스 구동중 ]" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-24 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-25 NFS 접근통제 
######################################################################################################
echo "[ U-25 ] : Check"
echo "[ U-25 NFS  접근통제]">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

if [ -f /etc/exports ]; then
	if [ `cat /etc/exports | grep all_squash | wc -l` = 0 ]; then
		echo "everyone 설정 없음" >> $RESULT_FILE 2>&1
	else
		echo "[취약]everyone 설정이 있슴" >> $RESULT_FILE 2>&1

	fi
else
	echo "/etc/exports 파일 없음" >> $RESULT_FILE 2>&1

fi


echo "" >> $RESULT_FILE 2>&1
echo "U-25 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1

######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-26 automountd 제거
######################################################################################################
echo "[ U-26 ] : Check"
echo "[ U-26 automountd 제거]">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

auto_port=`ps -ef | grep automount | grep -v "grep" | awk '{ print $2 }'`
auto_port2=`ps -ef | grep autofs | grep -v "grep" | awk '{ print $2 }'`
auto_port3=`ps -ef | grep automountd | grep -v "grep" | awk '{ print $2 }'`
if [ `netstat -na | grep ":$auto_port " | grep LISTEN | wc -l` = 0 ]; then
        echo "[ Disable - automount 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[ Disable - automount 서비스 구동중 ]" >> $RESULT_FILE 2>&1
fi
auto_port2=`ps -ef | grep automount | grep -v "grep" | awk '{ print $1 }'`

if [ `netstat -na | grep ":$auto_port2 " | grep LISTEN | wc -l` = 0 ]; then
        echo "[ Disable - autofs 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[ Disable - autofs 서비스 구동중 ]" >> $RESULT_FILE 2>&1
fi
auto_port3=`ps -ef | grep automount | grep -v "grep" | awk '{ print $1 }'`

if [ `netstat -na | grep ":$auto_port3 " | grep LISTEN | wc -l` = 0 ]; then
        echo "[ Disable - automountd 서비스 미구동중 ]" >> $RESULT_FILE 2>&1
else
        echo "[ Disable - automountd 서비스 구동중 ]" >> $RESULT_FILE 2>&1
fi


echo "" >> $RESULT_FILE 2>&1
echo "U-26 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-27 RPC 서비스 확인
######################################################################################################
echo "[ U-27 ] : Check"
echo "[ U-27 RPC 서비스 확인]">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1


echo "RPC 서비스 확인" >> $RESULT_FILE 2>&1
if [ `ps -ef | grep -v grep | egrep "rpc.cmsd|rusersd|bind|portmap|statd|usersd|rstatd|rpc.ttdbserverd|kcms_server|walld|rpc.nisd|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad" | wc -l` = 0 ]; then
	echo "rpc.cmsd|rusersd|bind|portmap|statd|usersd|rstatd|rpc.ttdbserverd|kcms_server|walld|rpc.nisd|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad 서비스 미구동" >> $RESULT_FILE 2>&1
else
	echo "`ps -ef | grep -v grep | egrep "rpc.cmsd|rusersd|bind|portmap|statd|usersd|rstatd|rpc.ttdbserverd|kcms_server|walld|rpc.nisd|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad" | awk '{ print $8 }'` 실행중" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-27 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1




######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-28 NIS, NIS+ 점검
######################################################################################################
echo "[ U-28 ] : Check"
echo "[ U-28 NIS, NIS+ 점검">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1
if [ `ps -ef | grep -v grep | egrep "ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdate" | wc -l` = 0 ]; then
        echo "[양호]NIS 서비스 비활성화" >> $RESULT_FILE 2>&1
else
	echo "[취약]NIS 서비스 활성화"  >> $RESULT_FILE 2>&1
fi
echo "" >> $RESULT_FILE 2>&1
echo "U-28 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-29 tftp, talk 서비스 비활성화
######################################################################################################
echo "[ U-29 ] : Check"
echo "[ U-29 tftp, talk 서비스 비활성화">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

if [ -f /etc/xinetd.d/tftp ]; then
	if [ `cat /etc/xinetd.d/tftp | grep disable | awk '{ print $3 }'` = "yes" ]; then
		echo "tftp disable = yes" >> $RESULT_FILE 2>&1
	else
		echo "[취약] tftp disable = no" >> $RESULT_FILE 2>&1
	fi
else
	echo "/etc/xientd.d/tftp 없음 " >> $RESULT_FILE 2>&1

fi


if [ -f /etc/xinetd.d/talk ]; then
        if [ `cat /etc/xinetd.d/talk | grep disable | awk '{ print $3 }'` = "yes" ]; then
                echo "talk disable = yes" >> $RESULT_FILE 2>&1
	else
                echo "[취약] talk disable = no" >> $RESULT_FILE 2>&1
        fi
else
        echo "/etc/xientd.d/talk 없음 " >> $RESULT_FILE 2>&1

fi

if [ -f /etc/xinetd.d/ntalk ]; then
        if [ `cat /etc/xinetd.d/ntalk | grep disable | awk '{ print $3 }'` = "yes" ]; then
                echo "ntalk disable = yes" >> $RESULT_FILE 2>&1
	else
                echo "[취약] ntalk disable = no" >> $RESULT_FILE 2>&1
        fi
else
        echo "/etc/xientd.d/ntalk 없음 " >> $RESULT_FILE 2>&1

fi


echo "" >> $RESULT_FILE 2>&1
echo "U-29 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1


######################################################################################################
# - 주요정보 통신 기반 시설 | 서비스 관리 | U-30 Sendmail 버전 점검
######################################################################################################
echo "[ U-30 ] : Check"
echo "[ U-30 Sendmail 버전 점검">> $RESULT_FILE 2>&1
echo "" >> $RESULT_FILE 2>&1

if [ `ps -ef | grep sendmail | grep -v grep | wc -l` = 0 ]; then
        echo "sendmail 서비스 미 구동중" >> $RESULT_FILE 2>&1
else
        echo "sendmail 서비스 구동중" >> $RESULT_FILE 2>&1
        echo "" >> $RESULT_FILE 2>&1
        echo "sendmail 버전 확인" >> $RESULT_FILE 2>&1
        echo "Version: `cat /etc/mail/sendmail.conf | grep -i version | awk '{print $3}'`" >> $RESULT_FILE 2>&1
fi

echo "" >> $RESULT_FILE 2>&1
echo "U-30 END" >> $RESULT_FILE 2>&1
echo "====================" >> $RESULT_FILE 2>&1
